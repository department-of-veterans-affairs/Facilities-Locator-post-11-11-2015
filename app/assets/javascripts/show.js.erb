$( document ).ready(function() {  
  L.mapbox.accessToken = 'pk.eyJ1IjoiYXlhbGVsb2VociIsImEiOiJjaWtmdnA1MHAwMDN4dHdtMnBqbGR3djJxIn0.fuqVOKCu8mE-9IdxTa4R8g';
  var geocoder = L.mapbox.geocoder('mapbox.places');
  var map = L.mapbox.map('map', 'mapbox.streets')
        .setView([38.8, -95.50], 5);
  map.scrollWheelZoom.disable();

  var parameters = {};
  var URL = window.location.href;
  
  var markerData = [];
  var markers_on_map = false;
  var shown = [];
  var shownIndex = 0;
  var max_number_shown_in_list = false;
  search_center_lat = -1;
  search_center_lng = -1;
  non_va_markers = [];
  
  if (URL.includes("Location=")) {
    var location = URL.substring(URL.indexOf("Location=") + 9, URL.indexOf('&')).replace(/%20/g, ' ')
    $('#search_location').val(location);
    geocoder.query(location, showMap);
  } else if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(recenter);
  }

  if (URL.includes("administration")) {
    var administration = get_string_from_url(URL, "administration");
    if(administration != "Health" && administration != "Select Service Type") {
      $("#choice-act-toggle").hide();
    }
    administration_selection.value = administration;
    parameters["administration"] = administration;
    $.ajax({
        url: '/service-and-facility-locator/service_types_by_administration',
        type: 'GET',
        data: parameters,
        dataType: "json",
        success: function(data){
            fill_service_level(data, 'service_level_1_selection');
        },
        failure: function(data){
            alert(data);
        }
    });
  }
  if(URL.includes("service_level_1")) {
    var service_level_1 = get_string_from_url(URL, "service_level_1");
    
    $('#service_level_1_selection').show();
    service_level_1_selection.value = service_level_1.replaceAll("%20", " ");
    parameters["service_level_1"] = service_level_1;
    $.ajax({
        url: '/service-and-facility-locator/service_level_2',
        type: 'GET',
        data: parameters,
        dataType: "json",
        success: function(data){
            fill_service_level(data, 'service_level_2_selection');
        },
        failure: function(data){
            alert(data);
        }
    });
  } 
  if(URL.includes("service_level_2")) {
    var service_level_2 = get_string_from_url(URL, "service_level_2")
    service_level_2_selection.value = service_level_2.replaceAll("%20", " ");
    parameters["service_level_2"] = service_level_2;
  }
  

  function showMap(err, data) {
    if (data.latlng) {
        map.setView([data.latlng[0], data.latlng[1]], 10);
    }
    search_center_lat = data.latlng[0];
    search_center_lng = data.latlng[1];
    
    var geojson = [
    {
      "type": "Feature",
      "geometry": {
        "type": "Point",
        "coordinates": [search_center_lng,search_center_lat]
      },
      "properties": {
        "title": "Your Location",
        "marker-color": "#e31c3d",
        "marker-size": "medium",
        "marker-symbol": "star"
      }
    }];
    var myLayer = L.mapbox.featureLayer().setGeoJSON(geojson).addTo(map);
    
    $.ajax({
        url: '/service-and-facility-locator/search/show',
        type: 'GET',
        data: parameters,
        dataType: "json",
        success: function(data){
            plotData(data, map);
        },
        failure: function(data){
            alert(data);
        }
    });
  } 

  // Clear the facilities list
  $("#facilitiesList").html("");
  
  function recenter(position) {
    map.setView([
      position.coords.latitude,
      position.coords.longitude
    ],10);
    if(search_location.value == "") {
      geocoder.reverseQuery([position.coords.longitude, position.coords.latitude], fill_location_search_box);
    }
  }
  
  function fill_location_search_box(err, data) {
    search_location.value = data.features[0].place_name
  }
  
  //plot data on the map
  function plotData(data, map){
   for (var i = 0; i < data.length; i++) {
     if (isNaN(parseFloat(data[i]['longitude'])) || isNaN(parseFloat(data[i]['latitude']))) {
       continue;
     }
      
    var marker = L.marker(new L.LatLng(data[i]['latitude'], data[i]['longitude']));
      
    var phone_number = data[i]['station_phone_number'];
    if(phone_number != null && phone_number.charAt(phone_number.length - 1) == 'x') {
      data[i]['station_phone_number'] = phone_number.substring(0, phone_number.length - 1);
    }
              
    var starting_location = "";
    if(search_center_lng == -1 || search_center_lat == -1) {
      if(typeof center !== 'undefined')
        starting_location += center.lat + ',' + center.lng;
    } else {
      starting_location += search_center_lat + ',' + search_center_lng;
    }
                 
    var driving_directions_url = "https://www.google.com/maps/dir/" + starting_location + 
          "/" + data[i]['street_address'] + " ";
    if (data[i]['suite_building_number'] != null) {
      driving_directions_url += data[i]['suite_building_number'] + " ";
    }
    driving_directions_url += data[i]['city'] + " " + data[i]['state'] + " " + data[i]['zip_code'];
    var classification = data[i]['classification'] == undefined ? "" : "<br>" + data[i]['classification'];
    var phone_number = data[i]['station_phone_number'] == undefined ? data[i]['cemetery_operations'] : data[i]['station_phone_number'];
    var href_link = URL.substring(0, URL.indexOf('/')) + "/service-and-facility-locator/single_facility/" + data[i]['facility_id'];
    
    var content = '<span class="bubble-title">' + data[i]['location_descriptive_name_common_name'] + 
          '</span>' + classification + "<br>" + phone_number + 
          '<br><a class="facilityLink" href="' + href_link + '">Facility Details</a>' +
          '  |  <a target="_blank" href="' + driving_directions_url + '">Driving Directions</a><br>\n';
    
    var geojson = create_marker(data[i], content);
    var myLayer = L.mapbox.featureLayer().setGeoJSON(geojson).addTo(map);
    markerData.push(data[i]);
  }
  markers_on_map = true;
  update_facility_list();
    
}
  
  function create_marker(facility, content) {
    // These defaults stick with VBA facilities. 
    var color = "#2e8540";
    var marker = "town-hall";
    
    if('cemetery_type' in facility) { // NCA facility
      color = "#494440";
      marker = "cemetery";
    }
    if('classification' in facility) { //VHA facility
      if(facility['classification'] == "VA Medical Center (VAMC)") {
        color = "#0071bc";
        marker = "hospital";
      } else if (facility['classification'] == "Residential Care Site (MH RRTP/DRRTP) (Stand-Alone)") {
        color = "#fdb81e";
        marker = "building";
      } else if (facility['classification'] == "Extended Care Site (Community Living Center) (Stand-Alone)") {
        color = "#fdb81e";
        marker = "building";
      } else {
        color = "#112e51"
        marker = "hospital";
      }
    } 

    return [
    {
      "type": "Feature",
      "geometry": {
        "type": "Point",
        "coordinates": [facility['longitude'], facility['latitude']]
      },
      "properties": {
        "title": content,
        "marker-color": color,
        "marker-size": "medium",
        "marker-symbol": marker
      }
    }];
  }
  
  function facilityHTML(facility) {
    if(facility.street_address != undefined) {
      var title = '<span class="facilityTitle">' + facility.location_descriptive_name_common_name + '</span>';
      var classification = facility.classification == undefined ? "" : "<br>" + facility.classification;
      var phone_number = facility.station_phone_number == undefined ? "" : "<br>" + facility.station_phone_number;
      return title + classification + '<br><span class="address">' + facility.street_address + "<br>\n" + facility.city + ", " + facility.state + " " + facility.zip_code + '</span>\n' +
        phone_number + "<br>\n"
        + '<a class="facilityLink" href="/service-and-facility-locator/single_facility/' + facility.facility_id + '">Facility Details</a><br>\n';
    }
  }

  map.on('moveend', function() {
    update_facility_list();
  });
  
  function update_facility_list() {
    if(URL.includes("show")) {
      $("#facilitiesList").html("");
      max_number_shown_in_list = false;
      shown = [];
      shownIndex = 0;
      if (markers_on_map) {
        var bounds = map.getBounds();
        
        var directions_URL_beginning = 'https://api.mapbox.com/v4/directions/mapbox.driving/';
        var directions_URL_ending = '.json?access_token=' + L.mapbox.accessToken;
            
            
        for(var i = 0; i < markerData.length; i++) {
          var lat_lng = L.latLng(markerData[i]['latitude'], markerData[i]['longitude']);
          if (bounds.contains(lat_lng)) {
            var center = map.getCenter();
            shown.push(markerData[i]);
            // Only showing facilities in the list if there are <100 so that we don't overwhelm the google maps
            //  directions API. This should be done a better way. 
            if(shown.length > 100) {
              var li = '<span class="facilityTitle">Only a subset of the facilities are shown in this list. Zoom in to see all the facilities in this list. </span><br><br><br>'
              $("#facilitiesList").prepend(li);
              max_number_shown_in_list = true;
              break;
            }
            
            var directionsUrl = directions_URL_beginning;
            if(search_center_lng == -1 || search_center_lat == -1) {
              directionsUrl += center.lng + ',' + center.lat;
            } else {
              directionsUrl += search_center_lng + ',' + search_center_lat;
            }
            directionsUrl += ';' + markerData[i]['longitude'] + ',' +  markerData[i]['latitude'] + directions_URL_ending;
            $.ajax({
              url: directionsUrl,
              type: 'GET',
              success: function(data) { list_facilities(data); }
            });
          }
        }
      }
      add_choice_program();
    }
  }
  
  function list_facilities(data) {
    
    var distance = meters_to_miles(data.routes[0].distance);
    var j = find_min_distance(shown, data.destination.geometry.coordinates[1], data.destination.geometry.coordinates[0])
    var li = "<li data-distance=" + distance + ">" + facilityHTML(shown[j])  + 
                  '<span class="distance">Driving Distance: ' + distance + " miles</span></li>";                     
    shown.splice(j, 1);
    var array = $("#facilitiesList").find("li");

    for(var i = 0; i < array.length; i++) {
      if(distance < parseFloat(array[i].dataset.distance)) {
        break;
      }
    }    
    if (i <= 0) {
      // This is super janky and needs to be fixed. 
      if(!max_number_shown_in_list) {
        $("#facilitiesList").prepend(li);
      } 
    } else if(i >= array.length){
      $("#facilitiesList").append(li);
    } else {
      $('#facilitiesList li:eq(' + i + ')').before(li); 
    }   
  }          
  
  function find_min_distance(shown, lat, lng) {
    var min_index_thus_far = 0;
    var min_lat_difference_thus_far = 
        Math.abs(lat - parseFloat(shown[0]['latitude']));
    var min_lng_difference_thus_far = 
        Math.abs(lng - parseFloat(shown[0]['longitude']));
    var min_total_difference = min_lat_difference_thus_far + min_lng_difference_thus_far;
    for(var i = 1; i < shown.length; i++) {
      tmp_lat_difference = Math.abs(lat - parseFloat(shown[i]['latitude']));
      tmp_lng_difference = Math.abs(lng - parseFloat(shown[i]['longitude']));
      tmp_total_difference = tmp_lat_difference + tmp_lng_difference;
      if(tmp_total_difference < min_total_difference) {
        min_index_thus_far = i;
        min_total_difference = tmp_total_difference;
      }
    }  
    return min_index_thus_far;
  }
  
  $('#refine_results').on("click", function() {
    service_level_1_selection.value = get_string_from_url(window.location.href, "service_level_1").replaceAll("%20", " ");
    service_level_2_selection.value = get_string_from_url(window.location.href, "service_level_2").replaceAll("%20", " ");
  });
  
  $('#choice-providers').on("click", function() {
    add_choice_program();
  });
  
  
  function add_choice_program() {
    if(document.getElementById("choice-providers").checked) {  
      document.getElementById("choice-act-label").innerHTML = "To schedule a Veterans Choice Program appointment you must call 866-606-8198";
      remove_choice_act_markers();
      var services_to_search = [];
      var URL = window.location.href
      if(URL.includes("service_level_1")) {
        var service_level_1 = get_string_from_url(URL, "service_level_1");
        if (service_level_1 == "Complementary and Alternative Medicine") {
          services_to_search.push("ACUPUNCTURE");
          services_to_search.push("CHIROPRACTOR");
          services_to_search.push("HOME HEALTH");
          services_to_search.push("HOSPICE AND PALLATIVE CARE");
        } else if (service_level_1 == "Audiology") {
          services_to_search.push("AUDIOLOGY");
        } else if (service_level_1 == "Dental Services") {
          services_to_search.push("DENTISTRY");
        } else if (service_level_1 == "Diagnostic Services") {
          services_to_search.push("LABORATORY");
          services_to_search.push("PATHOLOGY");
          services_to_search.push("RADIOLOGY / DIAGNOSTIC IMAGING");
        } else if (service_level_1 == "Extended Care") {
          services_to_search.push("GERONTOLOGY");
        } else if (service_level_1 == "Eye (Vision) Care") {
          services_to_search.push("OPTOMETRY");
          services_to_search.push("OPHTHALMOLOGY");
        } else if (service_level_1 == "Mental Health Care") {
          services_to_search.push("BEHAVIORAL MEDICINE");
        } else if (service_level_1 == "Wellness & Preventative Care") {
          services_to_search.push("DIET AND NUTRITION");
        } else if (service_level_1 == "Rehabilitation Care & Services") {
          services_to_search.push("PHYSICAL MED/REHABILITATION");
        } else if (service_level_1 == "Primary Care") {
          services_to_search.push("PRIMARY CARE");
        } else if (service_level_1 == "Outpatient Surgical Specialty Care") {
          services_to_search.push("AMBULATORY SURGERY CENTER");
          services_to_search.push("ANESTHESIOLOGY");
          services_to_search.push("ENT (EARS/NOSE/THROAT) -OTORHINOLARYNGOLOGY");
          services_to_search.push("OB/GYN");
          services_to_search.push("ORTHOPEDICS");
          services_to_search.push("PAIN MANAGEMENT");
          services_to_search.push("PODIATRY");
          services_to_search.push("SURGERY");
          services_to_search.push("UROLOGY");
        } else if (service_level_1 == "Outpatient Medical Specialty Care") {
          services_to_search.push("ALLERGY, ASTHMA, AND IMMUNOLOGY");
          services_to_search.push("CARDIOLOGY");
          services_to_search.push("DERMATOLOGY");
          services_to_search.push("DIALYSIS");
          services_to_search.push("ENDOCRINOLOGY");
          services_to_search.push("GASTROENTEROLOGY");
          services_to_search.push("GENETICS");
          services_to_search.push("HEMATOLOGY");
          services_to_search.push("INFECTIOUS DISEASES");
          services_to_search.push("INFUSION THERAPY");
          services_to_search.push("NEONATAL-PERINATAL");
          services_to_search.push("NEPHROLOGY");
          services_to_search.push("NEUROLOGY");
          services_to_search.push("ONCOLOGY");
          services_to_search.push("PROCTOLOGY");
          services_to_search.push("PULMONARY DISEASE");
          services_to_search.push("RHEUMATOLOGY");
        }
        
        for(var i = 0; i < services_to_search.length; i++) {
          get_non_va_data("&where=SpecialtyVACategories='" + services_to_search[i] + "'");
        }
        services_to_search = [];
        
      } else { // no service level 1
        get_non_va_data("");
      }
    } else { //unchecked
        document.getElementById("choice-act-label").innerHTML = "Show Choice Act Providers";
        if(non_va_markers.length > 0) {
          remove_choice_act_markers();
          update_facility_list();
        }
    }
  }
  
  function remove_choice_act_markers() {
    for(var i = 0; i < non_va_markers.length; i++) {
      map.removeLayer(non_va_markers[i]);
    }
    non_va_markers = [];
  }
  
  function get_non_va_data(string_to_add_to_query) {
    var bounds = map.getBounds();
    var x_min = bounds._southWest.lng;
    var y_min = bounds._southWest.lat;
    
    var x_max = bounds._northEast.lng;
    var y_max = bounds._northEast.lat;
    
    var arcgis_url = 'https://services3.arcgis.com/aqgBd3l68G8hEFFE/ArcGIS/rest/services/ChoiceActProviders/FeatureServer/0/query?f=json' + string_to_add_to_query + '&returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry={"xmin":' + x_min + ',"ymin":' + y_min + ',"xmax":' + x_max + ',"ymax":' + y_max + ',"spatialReference":{"wkid":4326}}&geometryType=esriGeometryEnvelope&inSR=102100&outFields=*&outSR=102100';
    
    $.ajax({
        url: arcgis_url,
        type: 'GET',
        dataType: "json",
        success: function(data){
            add_non_va_providers(data);
        },
        failure: function(data){
            alert(data);
        }
    });
  }
  
  function add_non_va_providers(data) {
    for(var i = 0; i < data.features.length; i++) {
      var obj = data.features[i];
      var name = obj.attributes.ProviderFirstName + " " + obj.attributes.ProviderSurName;
      
      var starting_location = "";
      if(search_center_lng == -1 || search_center_lat == -1) {
        if(typeof center !== 'undefined')
          starting_location += center.lat + ',' + center.lng;
      } else {
        starting_location += search_center_lat + ',' + search_center_lng;
      }
      
      var driving_directions_url = "https://www.google.com/maps/dir/" + starting_location + 
            "/" + obj.attributes.AddressLine + " " + obj.attributes.City + " " + 
            obj.attributes.State + " " + obj.attributes.Zip_1;
      
      
      var content = name + "<br>" + obj.attributes.GroupName + 
                            "<br>" + obj.attributes.SpecialtyVACategories +
                            "<br><br>" + obj.attributes.AddressLine +
                            "<br>" + obj.attributes.City + ", " + obj.attributes.State + 
                            obj.attributes.Zip_1 + 
                            "<br><br><a target='_blank' href='" + driving_directions_url + "'>Driving Directions</a>";

      var geojson = [
      {
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": [obj.attributes.Long, obj.attributes.Lat]
        },
        "properties": {
          "title": content,
          "marker-color": "#FAC922",
          "marker-size": "medium",
          "marker-symbol": "hospital"
        }
      }];
      var myLayer = L.mapbox.featureLayer().setGeoJSON(geojson).addTo(map);
      non_va_markers.push(myLayer);
    
      //add to list view
      var facility_in_list = '<span class="facilityTitle">' + name + '</span><br>Group: ' + 
              obj.attributes.GroupName + '<br>' + obj.attributes.SpecialtyVACategories + 
              '<br><span class="address">' + obj.attributes.AddressLine + "<br>\n" + obj.attributes.City + ", " + obj.attributes.State + " " + obj.attributes.Zip_1 + '</span>\n' +
              '<br><a class="facilityLink" target="_blank" href="' + driving_directions_url + '">Driving Directions</a><br>\n';
        
      var li = "<li>" + facility_in_list + "</li>";   
      $("#facilitiesList").append(li);
    }
  }
  
});

// Convert meters to miles
function meters_to_miles(meters) {
  return round10(meters / 1609.344);
}

function round10(n) {
    return Math.round(n*10) / 10;
}

function get_string_from_url(URL, substring_to_find) {
  var string_to_return = URL.substring(URL.indexOf(substring_to_find+"=") + substring_to_find.length + 1);
  if(string_to_return.indexOf("&") > -1 ) {
    string_to_return = string_to_return.substring(0, string_to_return.indexOf("&"))
  }
  return string_to_return.replace(/%20/g, ' ');
}

String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
};